{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dhivyaa/AgriVision/src/components/page-header.tsx"],"sourcesContent":["\r\n'use client';\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Button } from \"./ui/button\";\r\nimport { ArrowLeft } from \"lucide-react\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\nfunction PageHeader({\r\n  className,\r\n  children,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) {\r\n    const router = useRouter();\r\n  return (\r\n    <section\r\n      className={cn(\r\n        \"flex max-w-full flex-col gap-2\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n        <div className=\"flex items-center gap-4\">\r\n            <Button\r\n                variant=\"outline\"\r\n                size=\"icon\"\r\n                className=\"h-8 w-8 shrink-0\"\r\n                onClick={() => router.back()}\r\n            >\r\n                <ArrowLeft className=\"h-4 w-4\" />\r\n                <span className=\"sr-only\">Back</span>\r\n            </Button>\r\n            <div className=\"flex-1\">{children}</div>\r\n        </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction PageHeaderHeading({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLHeadingElement>) {\r\n  return (\r\n    <h1\r\n      className={cn(\r\n        \"text-3xl font-bold leading-tight tracking-tighter md:text-4xl lg:leading-[1.1]\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction PageHeaderDescription({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLParagraphElement>) {\r\n  return (\r\n    <p\r\n      className={cn(\r\n        \"max-w-prose text-balance text-muted-foreground sm:text-lg\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { PageHeader, PageHeaderHeading, PageHeaderDescription };\r\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AACA;AACA;;;AAJA;;;;;AAMA,SAAS,WAAW,EAClB,SAAS,EACT,QAAQ,EACR,GAAG,OACkC;;IACnC,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACzB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kCACA;QAED,GAAG,KAAK;kBAEP,cAAA,6LAAC;YAAI,WAAU;;8BACX,6LAAC,qIAAA,CAAA,SAAM;oBACH,SAAQ;oBACR,MAAK;oBACL,WAAU;oBACV,SAAS,IAAM,OAAO,IAAI;;sCAE1B,6LAAC,mNAAA,CAAA,YAAS;4BAAC,WAAU;;;;;;sCACrB,6LAAC;4BAAK,WAAU;sCAAU;;;;;;;;;;;;8BAE9B,6LAAC;oBAAI,WAAU;8BAAU;;;;;;;;;;;;;;;;;AAIrC;GA5BS;;QAKU,qIAAA,CAAA,YAAS;;;KALnB;AA8BT,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsC;IACzC,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kFACA;QAED,GAAG,KAAK;;;;;;AAGf;MAbS;AAeT,SAAS,sBAAsB,EAC7B,SAAS,EACT,GAAG,OACwC;IAC3C,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,6DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAbS","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dhivyaa/AgriVision/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dhivyaa/AgriVision/src/ai/flows/sensor-analysis.ts"],"sourcesContent":["\r\n'use server';\r\n\r\n/**\r\n * @fileOverview This file contains the Genkit flow for analyzing sensor data from a farm,\r\n * and integrating crop and government scheme recommendations.\r\n *\r\n * - analyzeSensorData - A function that handles the sensor data analysis process.\r\n * - SensorAnalysisInput - The input type for the analyzeSensorData function.\r\n * - SensorAnalysisOutput - The return type for the analyzeSensorData function.\r\n */\r\n\r\nimport {ai} from '@/ai/genkit';\r\nimport {z} from 'genkit';\r\nimport { recommendBestCrops } from './crop-recommendation';\r\nimport { recommendGovSchemes } from './government-scheme-recommendation';\r\n\r\n\r\nconst SensorAnalysisInputSchema = z.object({\r\n  state: z.string().describe('The state where the farm is located.'),\r\n  soilType: z.string().describe('The type of soil (e.g., Laterite, Red Soil, Black Cotton).'),\r\n  phValue: z.number().describe('The pH value of the soil.'),\r\n  moistureLevel: z.string().describe('The moisture level (e.g., Low, Medium, High).'),\r\n  temperature: z.number().describe('The current temperature in Celsius.'),\r\n  sunlightLevel: z.string().describe('The level of sunlight exposure (e.g., Low, Moderate, High).'),\r\n  season: z.string().describe('The current season (e.g., Spring, Summer, Autumn, Winter).'),\r\n});\r\nexport type SensorAnalysisInput = z.infer<typeof SensorAnalysisInputSchema>;\r\n\r\n\r\nconst SchemeSchema = z.object({\r\n    name: z.string().describe('The full name of the government scheme.'),\r\n    url: z.string().describe('The official government URL for the scheme.'),\r\n});\r\n\r\nconst SensorAnalysisOutputSchema = z.object({\r\n    analysis: z.string().describe(\"A short, summarized analysis of the provided soil and environmental conditions.\"),\r\n    recommendedCrops: z.object({\r\n        crops: z.array(z.string()).describe('An array of recommended crops based on the input data.'),\r\n        reasons: z.array(z.string()).describe('Reasons for recommending each crop.'),\r\n    }),\r\n    governmentSchemes: z.object({\r\n        centralSchemes: z.array(SchemeSchema).describe('Relevant Central Government Schemes.'),\r\n        stateSchemes: z.array(SchemeSchema).describe('Applicable State Government Schemes.'),\r\n        womenSchemes: z.array(SchemeSchema).describe('Women-specific agricultural schemes.'),\r\n    }),\r\n});\r\nexport type SensorAnalysisOutput = z.infer<typeof SensorAnalysisOutputSchema>;\r\n\r\nexport async function analyzeSensorData(\r\n  input: SensorAnalysisInput\r\n): Promise<SensorAnalysisOutput> {\r\n  return sensorAnalysisFlow(input);\r\n}\r\n\r\nconst analysisPrompt = ai.definePrompt({\r\n  name: 'sensorAnalysisPrompt',\r\n  input: {schema: SensorAnalysisInputSchema},\r\n  output: {schema: z.object({ analysis: z.string() })},\r\n  prompt: `You are an expert agricultural scientist. Analyze the following sensor data from a farm and provide a short, summarized analysis of the soil and environmental conditions.\r\n\r\nLocation and Conditions:\r\n- State: {{{state}}}\r\n- Season: {{{season}}}\r\n\r\nSoil Analysis:\r\n- Soil Type: {{{soilType}}}\r\n- pH Value: {{{phValue}}}\r\n- Moisture Level: {{{moistureLevel}}}\r\n\r\nEnvironmental Factors:\r\n- Temperature: {{{temperature}}}Â°C\r\n- Sunlight Level: {{{sunlightLevel}}}\r\n\r\nProvide a brief, one or two sentence summary of the conditions. For example: \"The soil is slightly alkaline with high moisture, which is suitable for monsoon crops.\"`,\r\n});\r\n\r\nconst sensorAnalysisFlow = ai.defineFlow(\r\n  {\r\n    name: 'sensorAnalysisFlow',\r\n    inputSchema: SensorAnalysisInputSchema,\r\n    outputSchema: SensorAnalysisOutputSchema,\r\n  },\r\n  async (input) => {\r\n    // 1. Get soil analysis\r\n    const { output: analysisResult } = await analysisPrompt(input);\r\n    \r\n    // 2. Get crop recommendations\r\n    const cropRecs = await recommendBestCrops({\r\n        soilNature: input.soilType,\r\n        phValue: input.phValue,\r\n        weatherConditions: `${input.sunlightLevel} sunlight, ${input.temperature}Â°C, ${input.season} season.`,\r\n        state: input.state,\r\n    });\r\n\r\n    // 3. Get government schemes\r\n    const govSchemes = await recommendGovSchemes({\r\n        state: input.state,\r\n        // Using a general requirement to fetch broad schemes relevant to the analysis\r\n        requirements: `Schemes for a farmer with ${input.soilType} soil, dealing with ${input.moistureLevel} moisture.`\r\n    });\r\n\r\n    return {\r\n      analysis: analysisResult!.analysis,\r\n      recommendedCrops: {\r\n        crops: cropRecs.recommendedCrops,\r\n        reasons: cropRecs.reasons,\r\n      },\r\n      governmentSchemes: {\r\n        centralSchemes: govSchemes.centralSchemes,\r\n        stateSchemes: govSchemes.stateSchemes,\r\n        womenSchemes: govSchemes.womenSchemes,\r\n      },\r\n    };\r\n  }\r\n);\r\n"],"names":[],"mappings":";;;;;;IAiDsB,oBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 241, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dhivyaa/AgriVision/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\r\n        outline: \"text-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface BadgeProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof badgeVariants> {}\r\n\r\nfunction Badge({ className, variant, ...props }: BadgeProps) {\r\n  return (\r\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\r\n  )\r\n}\r\n\r\nexport { Badge, badgeVariants }\r\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 289, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dhivyaa/AgriVision/src/components/ui/accordion.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\r\nimport { ChevronDown } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Accordion = AccordionPrimitive.Root\r\n\r\nconst AccordionItem = React.forwardRef<\r\n  React.ElementRef<typeof AccordionPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\r\n>(({ className, ...props }, ref) => (\r\n  <AccordionPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\"border-b\", className)}\r\n    {...props}\r\n  />\r\n))\r\nAccordionItem.displayName = \"AccordionItem\"\r\n\r\nconst AccordionTrigger = React.forwardRef<\r\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <AccordionPrimitive.Header className=\"flex\">\r\n    <AccordionPrimitive.Trigger\r\n      ref={ref}\r\n      className={cn(\r\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\r\n    </AccordionPrimitive.Trigger>\r\n  </AccordionPrimitive.Header>\r\n))\r\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\r\n\r\nconst AccordionContent = React.forwardRef<\r\n  React.ElementRef<typeof AccordionPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\r\n>(({ className, children, ...props }, ref) => (\r\n  <AccordionPrimitive.Content\r\n    ref={ref}\r\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\r\n    {...props}\r\n  >\r\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\r\n  </AccordionPrimitive.Content>\r\n))\r\n\r\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\r\n\r\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\r\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,YAAY,wKAAA,CAAA,OAAuB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,wKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QACzB,GAAG,KAAK;;;;;;;AAGb,cAAc,WAAW,GAAG;AAE5B,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,wKAAA,CAAA,SAAyB;QAAC,WAAU;kBACnC,cAAA,6LAAC,wKAAA,CAAA,UAA0B;YACzB,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,gIACA;YAED,GAAG,KAAK;;gBAER;8BACD,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;;;;;;;;;;;;;AAI7B,iBAAiB,WAAW,GAAG,wKAAA,CAAA,UAA0B,CAAC,WAAW;AAErE,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,wKAAA,CAAA,UAA0B;QACzB,KAAK;QACL,WAAU;QACT,GAAG,KAAK;kBAET,cAAA,6LAAC;YAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,aAAa;sBAAa;;;;;;;;;;;;AAIjD,iBAAiB,WAAW,GAAG,wKAAA,CAAA,UAA0B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 382, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dhivyaa/AgriVision/src/components/sensor-data-card.tsx"],"sourcesContent":["\r\n'use client';\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Loader2, TestTube, ChevronsRight, Thermometer, Droplets, Sun, MapPin, Calendar, Cloudy, Sprout, Landmark, Building, PersonStanding, ExternalLink, CheckCircle } from 'lucide-react';\r\nimport { analyzeSensorData, type SensorAnalysisOutput } from '@/ai/flows/sensor-analysis';\r\nimport { useTranslation } from '@/hooks/use-translation';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion';\r\n\r\n\r\ntype SensorData = {\r\n    State: string;\r\n    Soil_Type: string;\r\n    pH_Value: number;\r\n    Moisture_Level: string;\r\n    temperature: string;\r\n    Sunlight_Level: string;\r\n    Season: string;\r\n    rowIndex: number;\r\n}\r\n\r\ninterface SensorDataCardProps {\r\n    data: SensorData;\r\n}\r\n\r\nconst texts = {\r\n    sensorReadings: \"Current Sensor Readings\",\r\n    recordId: \"Record ID\",\r\n    state: \"State\",\r\n    season: \"Season\",\r\n    soilType: \"Soil Type\",\r\n    phValue: \"pH Value\",\r\n    moisture: \"Moisture\",\r\n    temperature: \"Temperature\",\r\n    sunlight: \"Sunlight\",\r\n    analyzeButton: \"Analyze Data\",\r\n    resultTitle: \"Comprehensive Analysis\",\r\n    resultDescription: \"AI-powered insights, recommendations, and schemes.\",\r\n    analysis: \"Soil Analysis\",\r\n    recommendations: \"Recommendations\",\r\n    resultsPlaceholder: \"Click 'Analyze Data' to see the AI-powered analysis.\",\r\n    quotaError: \"You have exceeded your API quota. Please try again later or check your billing plan.\",\r\n    cropRecommendations: \"Crop Recommendations\",\r\n    recommendedCrops: \"Recommended Crops\",\r\n    governmentSchemes: \"Government Schemes\",\r\n    centralSchemes: \"Central Government Schemes\",\r\n    stateSchemes: \"State Government Schemes\",\r\n    womenSchemes: \"Women-Specific Schemes\",\r\n    noSchemes: \"No specific schemes found.\",\r\n};\r\n\r\nexport function SensorDataCard({ data }: SensorDataCardProps) {\r\n  const [result, setResult] = useState<SensorAnalysisOutput | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const { t } = useTranslation(texts);\r\n  \r\n  const parseTemperature = (tempRange: string) => {\r\n    const numbers = tempRange.match(/\\d+/g);\r\n    if (!numbers) return 25; // Default value\r\n    const avg = (parseInt(numbers[0]) + parseInt(numbers[1] || numbers[0])) / 2;\r\n    return Math.round(avg);\r\n  }\r\n\r\n  const handleAnalyze = useCallback(async () => {\r\n    setLoading(true);\r\n    setResult(null);\r\n    setError(null);\r\n    try {\r\n      const response = await analyzeSensorData({\r\n          state: data.State,\r\n          soilType: data.Soil_Type,\r\n          phValue: data.pH_Value,\r\n          moistureLevel: data.Moisture_Level,\r\n          temperature: parseTemperature(data.temperature),\r\n          sunlightLevel: data.Sunlight_Level,\r\n          season: data.Season,\r\n      });\r\n      setResult(response);\r\n    } catch (e: any) {\r\n      console.error(e);\r\n      if (e.message?.includes('429')) {\r\n          setError(t('quotaError'));\r\n      } else {\r\n          setError('An error occurred during analysis.');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [data, t]);\r\n\r\n  useEffect(() => {\r\n    handleAnalyze();\r\n  }, [handleAnalyze]);\r\n\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n        <Card>\r\n            <CardHeader>\r\n                <div className=\"flex justify-between items-start\">\r\n                    <div>\r\n                        <CardTitle className=\"font-headline\">{t('sensorReadings')}</CardTitle>\r\n                        <CardDescription>{t('state')}: {data.State} | {t('season')}: {data.Season}</CardDescription>\r\n                    </div>\r\n                    <Badge variant=\"outline\">{t('recordId')}: {data.rowIndex}</Badge>\r\n                </div>\r\n            </CardHeader>\r\n            <CardContent className=\"grid grid-cols-2 gap-4\">\r\n                <div className=\"flex items-center gap-2 p-3 rounded-lg bg-muted/50\">\r\n                    <Cloudy className=\"h-6 w-6 text-primary\" />\r\n                    <div>\r\n                        <p className=\"text-sm text-muted-foreground\">{t('soilType')}</p>\r\n                        <p className=\"font-semibold\">{data.Soil_Type}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex items-center gap-2 p-3 rounded-lg bg-muted/50\">\r\n                    <TestTube className=\"h-6 w-6 text-primary\" />\r\n                    <div>\r\n                        <p className=\"text-sm text-muted-foreground\">{t('phValue')}</p>\r\n                        <p className=\"font-semibold\">{data.pH_Value}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex items-center gap-2 p-3 rounded-lg bg-muted/50\">\r\n                    <Droplets className=\"h-6 w-6 text-primary\" />\r\n                    <div>\r\n                        <p className=\"text-sm text-muted-foreground\">{t('moisture')}</p>\r\n                        <p className=\"font-semibold\">{data.Moisture_Level}</p>\r\n                    </div>\r\n                </div>\r\n                 <div className=\"flex items-center gap-2 p-3 rounded-lg bg-muted/50\">\r\n                    <Thermometer className=\"h-6 w-6 text-primary\" />\r\n                    <div>\r\n                        <p className=\"text-sm text-muted-foreground\">{t('temperature')}</p>\r\n                        <p className=\"font-semibold\">{data.temperature}</p>\r\n                    </div>\r\n                </div>\r\n                 <div className=\"flex items-center gap-2 p-3 rounded-lg bg-muted/50 col-span-2\">\r\n                    <Sun className=\"h-6 w-6 text-primary\" />\r\n                    <div>\r\n                        <p className=\"text-sm text-muted-foreground\">{t('sunlight')}</p>\r\n                        <p className=\"font-semibold\">{data.Sunlight_Level}</p>\r\n                    </div>\r\n                </div>\r\n            </CardContent>\r\n             <CardFooter>\r\n              <Button onClick={handleAnalyze} disabled={loading} className=\"w-full\">\r\n                {loading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\r\n                {t('analyzeButton')}\r\n              </Button>\r\n            </CardFooter>\r\n        </Card>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"font-headline\">{t('resultTitle')}</CardTitle>\r\n          <CardDescription>{t('resultDescription')}</CardDescription>\r\n        </CardHeader>\r\n        <CardContent className=\"min-h-[250px]\">\r\n          {loading && (\r\n            <div className=\"flex justify-center items-center h-full\">\r\n              <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\r\n            </div>\r\n          )}\r\n          {error && <p className=\"text-destructive\">{error}</p>}\r\n          \r\n          {result && !loading && (\r\n             <Accordion type=\"multiple\" className=\"w-full\" defaultValue={['soil-analysis', 'crop-recs', 'gov-schemes']}>\r\n                <AccordionItem value=\"soil-analysis\">\r\n                    <AccordionTrigger>\r\n                        <div className=\"flex items-center gap-2\">\r\n                            <TestTube className=\"h-5 w-5 text-primary\" />\r\n                            {t('analysis')}\r\n                        </div>\r\n                    </AccordionTrigger>\r\n                    <AccordionContent>\r\n                        <p className=\"text-sm text-muted-foreground\">{result.analysis}</p>\r\n                    </AccordionContent>\r\n                </AccordionItem>\r\n                <AccordionItem value=\"crop-recs\">\r\n                     <AccordionTrigger>\r\n                        <div className=\"flex items-center gap-2\">\r\n                            <Sprout className=\"h-5 w-5 text-primary\" />\r\n                            {t('cropRecommendations')}\r\n                        </div>\r\n                    </AccordionTrigger>\r\n                    <AccordionContent>\r\n                         <ul className=\"space-y-3\">\r\n                            {result.recommendedCrops.crops.map((crop, index) => (\r\n                            <li key={index} className=\"pb-3 border-b border-border/50 last:border-b-0\">\r\n                                <p className=\"font-medium flex-1\">{crop}</p>\r\n                                {result.recommendedCrops.reasons[index] && (\r\n                                <div className=\"flex items-start gap-2 mt-1\">\r\n                                    <CheckCircle className=\"h-4 w-4 mt-1 text-accent flex-shrink-0\" />\r\n                                    <p className=\"text-xs text-muted-foreground\">{result.recommendedCrops.reasons[index]}</p>\r\n                                </div>\r\n                                )}\r\n                            </li>\r\n                            ))}\r\n                        </ul>\r\n                    </AccordionContent>\r\n                </AccordionItem>\r\n                <AccordionItem value=\"gov-schemes\">\r\n                     <AccordionTrigger>\r\n                        <div className=\"flex items-center gap-2\">\r\n                            <Landmark className=\"h-5 w-5 text-primary\" />\r\n                            {t('governmentSchemes')}\r\n                        </div>\r\n                    </AccordionTrigger>\r\n                    <AccordionContent>\r\n                       <Accordion type=\"multiple\" className=\"w-full\" defaultValue={['central', 'state', 'women']}>\r\n                            <AccordionItem value=\"central\">\r\n                                <AccordionTrigger className=\"text-xs py-2\">\r\n                                <div className=\"flex items-center gap-2\">\r\n                                    <Landmark className=\"h-4 w-4\" />\r\n                                    {t('centralSchemes')}\r\n                                </div>\r\n                                </AccordionTrigger>\r\n                                <AccordionContent className=\"pt-2\">\r\n                                <ul className=\"list-disc pl-6 space-y-2 text-muted-foreground\">\r\n                                    {result.governmentSchemes.centralSchemes.length > 0 ? result.governmentSchemes.centralSchemes.map((scheme, index) => (\r\n                                    <li key={`central-${index}`} className=\"text-xs\">\r\n                                        <a href={scheme.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"hover:underline hover:text-primary flex items-center gap-1\">\r\n                                        {scheme.name}\r\n                                        <ExternalLink className=\"h-3 w-3\" />\r\n                                        </a>\r\n                                    </li>\r\n                                    )) : <li>{t('noSchemes')}</li>}\r\n                                </ul>\r\n                                </AccordionContent>\r\n                            </AccordionItem>\r\n                             <AccordionItem value=\"state\">\r\n                                <AccordionTrigger className=\"text-xs py-2\">\r\n                                <div className=\"flex items-center gap-2\">\r\n                                    <Building className=\"h-4 w-4\" />\r\n                                    {t('stateSchemes')}\r\n                                </div>\r\n                                </AccordionTrigger>\r\n                                <AccordionContent className=\"pt-2\">\r\n                                <ul className=\"list-disc pl-6 space-y-2 text-muted-foreground\">\r\n                                    {result.governmentSchemes.stateSchemes.length > 0 ? result.governmentSchemes.stateSchemes.map((scheme, index) => (\r\n                                    <li key={`state-${index}`} className=\"text-xs\">\r\n                                        <a href={scheme.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"hover:underline hover:text-primary flex items-center gap-1\">\r\n                                        {scheme.name}\r\n                                        <ExternalLink className=\"h-3 w-3\" />\r\n                                        </a>\r\n                                    </li>\r\n                                    )) : <li>{t('noSchemes')}</li>}\r\n                                </ul>\r\n                                </AccordionContent>\r\n                            </AccordionItem>\r\n                            <AccordionItem value=\"women\">\r\n                                <AccordionTrigger className=\"text-xs py-2\">\r\n                                <div className=\"flex items-center gap-2\">\r\n                                    <PersonStanding className=\"h-4 w-4\" />\r\n                                    {t('womenSchemes')}\r\n                                </div>\r\n                                </AccordionTrigger>\r\n                                <AccordionContent className=\"pt-2\">\r\n                                <ul className=\"list-disc pl-6 space-y-2 text-muted-foreground\">\r\n                                    {result.governmentSchemes.womenSchemes.length > 0 ? result.governmentSchemes.womenSchemes.map((scheme, index) => (\r\n                                    <li key={`women-${index}`} className=\"text-xs\">\r\n                                        <a href={scheme.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"hover:underline hover:text-primary flex items-center gap-1\">\r\n                                        {scheme.name}\r\n                                        <ExternalLink className=\"h-3 w-3\" />\r\n                                        </a>\r\n                                    </li>\r\n                                    )) : <li>{t('noSchemes')}</li>}\r\n                                </ul>\r\n                                </AccordionContent>\r\n                            </AccordionItem>\r\n                       </Accordion>\r\n                    </AccordionContent>\r\n                </AccordionItem>\r\n            </Accordion>\r\n          )}\r\n\r\n          {!loading && !result && !error && (\r\n            <div className=\"text-center text-muted-foreground py-10\">\r\n              {t('resultsPlaceholder')}\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1333, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dhivyaa/AgriVision/src/app/sensor-analysis/page.tsx"],"sourcesContent":["\r\n'use client';\r\nimport { useState } from 'react';\r\nimport { PageHeader, PageHeaderHeading, PageHeaderDescription } from '@/components/page-header';\r\nimport { useTranslation } from '@/hooks/use-translation';\r\nimport { SensorDataCard } from '@/components/sensor-data-card';\r\nimport cropData from '@/lib/crop-data.json';\r\nimport { Button } from '@/components/ui/button';\r\nimport { ArrowRight } from 'lucide-react';\r\n\r\nconst texts = {\r\n  title: \"Live Sensor Analysis\",\r\n  description: \"Real-time sensor data from across various regions. Click 'Analyze Data' to get AI-powered insights for the current record, or 'Next Record' to cycle through the data.\",\r\n  nextRecord: \"Next Record\",\r\n};\r\n\r\nexport default function SensorAnalysisPage() {\r\n  const { t } = useTranslation(texts);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n  const handleNextRecord = () => {\r\n    setCurrentIndex((prevIndex) => (prevIndex + 1) % cropData.length);\r\n  };\r\n  \r\n  const currentData = cropData[currentIndex];\r\n\r\n  return (\r\n    <div className=\"container mx-auto py-8 px-4 md:px-6\">\r\n      <PageHeader>\r\n        <PageHeaderHeading className=\"font-headline\">{t('title')}</PageHeaderHeading>\r\n        <PageHeaderDescription>\r\n          {t('description')}\r\n        </PageHeaderDescription>\r\n      </PageHeader>\r\n      <div className=\"mt-8\">\r\n        <SensorDataCard data={currentData} key={currentIndex} />\r\n      </div>\r\n      <div className=\"mt-4 flex justify-end\">\r\n          <Button onClick={handleNextRecord}>\r\n            {t('nextRecord')} <ArrowRight className=\"ml-2 h-4 w-4\" />\r\n          </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAPA;;;;;;;;AASA,MAAM,QAAQ;IACZ,OAAO;IACP,aAAa;IACb,YAAY;AACd;AAEe,SAAS;;IACtB,MAAM,EAAE,CAAC,EAAE,GAAG,CAAA,GAAA,sIAAA,CAAA,iBAAc,AAAD,EAAE;IAC7B,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,MAAM,mBAAmB;QACvB,gBAAgB,CAAC,YAAc,CAAC,YAAY,CAAC,IAAI,kGAAA,CAAA,UAAQ,CAAC,MAAM;IAClE;IAEA,MAAM,cAAc,kGAAA,CAAA,UAAQ,CAAC,aAAa;IAE1C,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,uIAAA,CAAA,aAAU;;kCACT,6LAAC,uIAAA,CAAA,oBAAiB;wBAAC,WAAU;kCAAiB,EAAE;;;;;;kCAChD,6LAAC,uIAAA,CAAA,wBAAqB;kCACnB,EAAE;;;;;;;;;;;;0BAGP,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,+IAAA,CAAA,iBAAc;oBAAC,MAAM;mBAAkB;;;;;;;;;;0BAE1C,6LAAC;gBAAI,WAAU;0BACX,cAAA,6LAAC,qIAAA,CAAA,SAAM;oBAAC,SAAS;;wBACd,EAAE;wBAAc;sCAAC,6LAAC,qNAAA,CAAA,aAAU;4BAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;AAKpD;GA5BwB;;QACR,sIAAA,CAAA,iBAAc;;;KADN","debugId":null}}]
}