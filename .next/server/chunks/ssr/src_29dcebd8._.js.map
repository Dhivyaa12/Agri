{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dhivyaa/AgriVision/src/components/page-header.tsx"],"sourcesContent":["\r\n'use client';\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Button } from \"./ui/button\";\r\nimport { ArrowLeft } from \"lucide-react\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\nfunction PageHeader({\r\n  className,\r\n  children,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) {\r\n    const router = useRouter();\r\n  return (\r\n    <section\r\n      className={cn(\r\n        \"flex max-w-full flex-col gap-2\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n        <div className=\"flex items-center gap-4\">\r\n            <Button\r\n                variant=\"outline\"\r\n                size=\"icon\"\r\n                className=\"h-8 w-8 shrink-0\"\r\n                onClick={() => router.back()}\r\n            >\r\n                <ArrowLeft className=\"h-4 w-4\" />\r\n                <span className=\"sr-only\">Back</span>\r\n            </Button>\r\n            <div className=\"flex-1\">{children}</div>\r\n        </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction PageHeaderHeading({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLHeadingElement>) {\r\n  return (\r\n    <h1\r\n      className={cn(\r\n        \"text-3xl font-bold leading-tight tracking-tighter md:text-4xl lg:leading-[1.1]\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction PageHeaderDescription({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLParagraphElement>) {\r\n  return (\r\n    <p\r\n      className={cn(\r\n        \"max-w-prose text-balance text-muted-foreground sm:text-lg\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { PageHeader, PageHeaderHeading, PageHeaderDescription };\r\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AACA;AACA;AAJA;;;;;;AAMA,SAAS,WAAW,EAClB,SAAS,EACT,QAAQ,EACR,GAAG,OACkC;IACnC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACzB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kCACA;QAED,GAAG,KAAK;kBAEP,cAAA,8OAAC;YAAI,WAAU;;8BACX,8OAAC,kIAAA,CAAA,SAAM;oBACH,SAAQ;oBACR,MAAK;oBACL,WAAU;oBACV,SAAS,IAAM,OAAO,IAAI;;sCAE1B,8OAAC,gNAAA,CAAA,YAAS;4BAAC,WAAU;;;;;;sCACrB,8OAAC;4BAAK,WAAU;sCAAU;;;;;;;;;;;;8BAE9B,8OAAC;oBAAI,WAAU;8BAAU;;;;;;;;;;;;;;;;;AAIrC;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsC;IACzC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,sBAAsB,EAC7B,SAAS,EACT,GAAG,OACwC;IAC3C,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,6DACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dhivyaa/AgriVision/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dhivyaa/AgriVision/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst labelVariants = cva(\r\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n)\r\n\r\nconst Label = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\r\n    VariantProps<typeof labelVariants>\r\n>(({ className, ...props }, ref) => (\r\n  <LabelPrimitive.Root\r\n    ref={ref}\r\n    className={cn(labelVariants(), className)}\r\n    {...props}\r\n  />\r\n))\r\nLabel.displayName = LabelPrimitive.Root.displayName\r\n\r\nexport { Label }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dhivyaa/AgriVision/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport {\r\n  Controller,\r\n  FormProvider,\r\n  useFormContext,\r\n  type ControllerProps,\r\n  type FieldPath,\r\n  type FieldValues,\r\n} from \"react-hook-form\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Label } from \"@/components/ui/label\"\r\n\r\nconst Form = FormProvider\r\n\r\ntype FormFieldContextValue<\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\r\n> = {\r\n  name: TName\r\n}\r\n\r\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\r\n  {} as FormFieldContextValue\r\n)\r\n\r\nconst FormField = <\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\r\n>({\r\n  ...props\r\n}: ControllerProps<TFieldValues, TName>) => {\r\n  return (\r\n    <FormFieldContext.Provider value={{ name: props.name }}>\r\n      <Controller {...props} />\r\n    </FormFieldContext.Provider>\r\n  )\r\n}\r\n\r\nconst useFormField = () => {\r\n  const fieldContext = React.useContext(FormFieldContext)\r\n  const itemContext = React.useContext(FormItemContext)\r\n  const { getFieldState, formState } = useFormContext()\r\n\r\n  const fieldState = getFieldState(fieldContext.name, formState)\r\n\r\n  if (!fieldContext) {\r\n    throw new Error(\"useFormField should be used within <FormField>\")\r\n  }\r\n\r\n  const { id } = itemContext\r\n\r\n  return {\r\n    id,\r\n    name: fieldContext.name,\r\n    formItemId: `${id}-form-item`,\r\n    formDescriptionId: `${id}-form-item-description`,\r\n    formMessageId: `${id}-form-item-message`,\r\n    ...fieldState,\r\n  }\r\n}\r\n\r\ntype FormItemContextValue = {\r\n  id: string\r\n}\r\n\r\nconst FormItemContext = React.createContext<FormItemContextValue>(\r\n  {} as FormItemContextValue\r\n)\r\n\r\nconst FormItem = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => {\r\n  const id = React.useId()\r\n\r\n  return (\r\n    <FormItemContext.Provider value={{ id }}>\r\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\r\n    </FormItemContext.Provider>\r\n  )\r\n})\r\nFormItem.displayName = \"FormItem\"\r\n\r\nconst FormLabel = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\r\n>(({ className, ...props }, ref) => {\r\n  const { error, formItemId } = useFormField()\r\n\r\n  return (\r\n    <Label\r\n      ref={ref}\r\n      className={cn(error && \"text-destructive\", className)}\r\n      htmlFor={formItemId}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nFormLabel.displayName = \"FormLabel\"\r\n\r\nconst FormControl = React.forwardRef<\r\n  React.ElementRef<typeof Slot>,\r\n  React.ComponentPropsWithoutRef<typeof Slot>\r\n>(({ ...props }, ref) => {\r\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\r\n\r\n  return (\r\n    <Slot\r\n      ref={ref}\r\n      id={formItemId}\r\n      aria-describedby={\r\n        !error\r\n          ? `${formDescriptionId}`\r\n          : `${formDescriptionId} ${formMessageId}`\r\n      }\r\n      aria-invalid={!!error}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nFormControl.displayName = \"FormControl\"\r\n\r\nconst FormDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => {\r\n  const { formDescriptionId } = useFormField()\r\n\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      id={formDescriptionId}\r\n      className={cn(\"text-sm text-muted-foreground\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nFormDescription.displayName = \"FormDescription\"\r\n\r\nconst FormMessage = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, children, ...props }, ref) => {\r\n  const { error, formMessageId } = useFormField()\r\n  const body = error ? String(error?.message ?? \"\") : children\r\n\r\n  if (!body) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      id={formMessageId}\r\n      className={cn(\"text-sm font-medium text-destructive\", className)}\r\n      {...props}\r\n    >\r\n      {body}\r\n    </p>\r\n  )\r\n})\r\nFormMessage.displayName = \"FormMessage\"\r\n\r\nexport {\r\n  useFormField,\r\n  Form,\r\n  FormItem,\r\n  FormLabel,\r\n  FormControl,\r\n  FormDescription,\r\n  FormMessage,\r\n  FormField,\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 371, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dhivyaa/AgriVision/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\r\n\r\nimport {cn} from '@/lib/utils';\r\n\r\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\r\n  ({className, ...props}, ref) => {\r\n    return (\r\n      <textarea\r\n        className={cn(\r\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\nTextarea.displayName = 'Textarea';\r\n\r\nexport {Textarea};\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 399, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dhivyaa/AgriVision/src/ai/flows/crop-diagnosis.ts"],"sourcesContent":["'use server';\r\n/**\r\n * @fileOverview A crop disease diagnosis AI agent.\r\n *\r\n * - diagnoseCrop - A function that handles the crop diagnosis process.\r\n * - DiagnoseCropInput - The input type for the diagnoseCrop function.\r\n * - DiagnoseCropOutput - The return type for the diagnoseCrop function.\r\n */\r\n\r\nimport {ai} from '@/ai/genkit';\r\nimport {z} from 'genkit';\r\n\r\nconst DiagnoseCropInputSchema = z.object({\r\n  photoDataUri: z\r\n    .string()\r\n    .describe(\r\n      \"A photo of the crop, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'.\"\r\n    ),\r\n  description: z.string().optional().describe('An optional description of the crop issue.'),\r\n});\r\nexport type DiagnoseCropInput = z.infer<typeof DiagnoseCropInputSchema>;\r\n\r\nconst DiagnoseCropOutputSchema = z.object({\r\n  diseaseName: z.string().describe('The name of the identified disease.'),\r\n  possibleCauses: z.string().describe('Possible causes of the disease.'),\r\n  recommendedRemedies: z.string().describe('AI-recommended remedies for the disease.'),\r\n  preventiveMeasures: z.string().describe('Preventive measures to avoid the disease in the future.'),\r\n});\r\nexport type DiagnoseCropOutput = z.infer<typeof DiagnoseCropOutputSchema>;\r\n\r\nexport async function diagnoseCrop(input: DiagnoseCropInput): Promise<DiagnoseCropOutput> {\r\n  return diagnoseCropFlow(input);\r\n}\r\n\r\nconst prompt = ai.definePrompt({\r\n  name: 'diagnoseCropPrompt',\r\n  input: {schema: DiagnoseCropInputSchema},\r\n  output: {schema: DiagnoseCropOutputSchema},\r\n  prompt: `You are an expert in diagnosing crop diseases. Analyze the provided information to identify the disease, its possible causes, recommend remedies, and suggest preventive measures.\r\n\r\n{{#if description}}Description: {{{description}}}{{/if}}\r\nPhoto: {{media url=photoDataUri}}\r\n\r\nIf no description is provided, rely solely on the image for your analysis.`,\r\n});\r\n\r\nconst diagnoseCropFlow = ai.defineFlow(\r\n  {\r\n    name: 'diagnoseCropFlow',\r\n    inputSchema: DiagnoseCropInputSchema,\r\n    outputSchema: DiagnoseCropOutputSchema,\r\n  },\r\n  async input => {\r\n    const {output} = await prompt(input);\r\n    return output!;\r\n  }\r\n);\r\n"],"names":[],"mappings":";;;;;;IA8BsB,eAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 412, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dhivyaa/AgriVision/src/ai/flows/text-to-speech.ts"],"sourcesContent":["\r\n'use server';\r\n\r\n/**\r\n * @fileOverview A text-to-speech (TTS) flow using Genkit and Google AI.\r\n * \r\n * - textToSpeech - Converts a string of text into speech audio.\r\n * - TextToSpeechInput - The input type for the textToSpeech function.\r\n * - TextToSpeechOutput - The return type for the textToSpeech function.\r\n */\r\n\r\nimport {ai} from '@/ai/genkit';\r\nimport {googleAI} from '@genkit-ai/googleai';\r\nimport {z} from 'genkit';\r\nimport wav from 'wav';\r\nimport { translateText } from './translate-text';\r\n\r\nconst TextToSpeechInputSchema = z.object({\r\n  text: z.string().describe('The text to be converted to speech.'),\r\n  language: z.string().optional().describe('The language to use for the speech, e.g., \"en\", \"ta\".'),\r\n});\r\nexport type TextToSpeechInput = z.infer<typeof TextToSpeechInputSchema>;\r\n\r\nconst TextToSpeechOutputSchema = z.object({\r\n  audioDataUri: z.string().describe(\"The generated audio as a data URI. Expected format: 'data:audio/wav;base64,<encoded_data>'.\"),\r\n});\r\nexport type TextToSpeechOutput = z.infer<typeof TextToSpeechOutputSchema>;\r\n\r\n\r\nexport async function textToSpeech(input: TextToSpeechInput): Promise<TextToSpeechOutput> {\r\n  return textToSpeechFlow(input);\r\n}\r\n\r\nconst getVoiceForLanguage = (language?: string) => {\r\n    switch (language) {\r\n      case 'ta':\r\n        return 'Achernar';\r\n      case 'hi':\r\n        return 'Achird';\r\n      case 'te':\r\n        return 'Alnilam';\r\n      case 'kn':\r\n        return 'Erinome';\r\n      case 'ml':\r\n        return 'Gacrux';\r\n      case 'en':\r\n      default:\r\n        return 'Algenib';\r\n    }\r\n}\r\n\r\nconst textToSpeechFlow = ai.defineFlow(\r\n  {\r\n    name: 'textToSpeechFlow',\r\n    inputSchema: TextToSpeechInputSchema,\r\n    outputSchema: TextToSpeechOutputSchema,\r\n  },\r\n  async ({ text, language }) => {\r\n    const voiceName = getVoiceForLanguage(language);\r\n    \r\n    let textToSpeak = text;\r\n    if (language && language !== 'en') {\r\n      const translationResponse = await translateText({ text, targetLanguage: language });\r\n      textToSpeak = translationResponse.translatedText;\r\n    }\r\n\r\n\r\n    const { media } = await ai.generate({\r\n      model: googleAI.model('gemini-2.5-flash-preview-tts'),\r\n      config: {\r\n        responseModalities: ['AUDIO'],\r\n        speechConfig: {\r\n          voiceConfig: {\r\n            prebuiltVoiceConfig: { voiceName },\r\n          },\r\n        },\r\n      },\r\n      prompt: textToSpeak,\r\n    });\r\n    \r\n    if (!media) {\r\n      throw new Error('No audio media was generated.');\r\n    }\r\n\r\n    const audioBuffer = Buffer.from(\r\n      media.url.substring(media.url.indexOf(',') + 1),\r\n      'base64'\r\n    );\r\n\r\n    const wavData = await toWav(audioBuffer);\r\n    \r\n    return {\r\n      audioDataUri: 'data:audio/wav;base64,' + wavData,\r\n    };\r\n  }\r\n);\r\n\r\n\r\nasync function toWav(\r\n  pcmData: Buffer,\r\n  channels = 1,\r\n  rate = 24000,\r\n  sampleWidth = 2\r\n): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const writer = new wav.Writer({\r\n      channels,\r\n      sampleRate: rate,\r\n      bitDepth: sampleWidth * 8,\r\n    });\r\n\r\n    const bufs: Buffer[] = [];\r\n    writer.on('error', reject);\r\n    writer.on('data', (chunk) => {\r\n      bufs.push(chunk);\r\n    });\r\n    writer.on('end', () => {\r\n      resolve(Buffer.concat(bufs).toString('base64'));\r\n    });\r\n\r\n    writer.write(pcmData);\r\n    writer.end();\r\n  });\r\n}\r\n"],"names":[],"mappings":";;;;;;IA6BsB,eAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 425, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dhivyaa/AgriVision/src/ai/flows/speech-to-text.ts"],"sourcesContent":["'use server';\r\n\r\n/**\r\n * @fileOverview A speech-to-text (STT) flow using Genkit and Google AI.\r\n *\r\n * - speechToText - Converts speech audio into text.\r\n * - SpeechToTextInput - The input type for the speechToText function.\r\n * - SpeechToTextOutput - The return type for the speechToText function.\r\n */\r\n\r\nimport {ai} from '@/ai/genkit';\r\nimport {z} from 'genkit';\r\n\r\nconst SpeechToTextInputSchema = z.object({\r\n  audioDataUri: z\r\n    .string()\r\n    .describe(\r\n      \"The speech audio as a data URI. Expected format: 'data:audio/wav;base64,<encoded_data>'.\"\r\n    ),\r\n  language: z.string().optional().describe('The BCP-47 language code for transcription (e.g., \"en-US\", \"hi-IN\").'),\r\n});\r\nexport type SpeechToTextInput = z.infer<typeof SpeechToTextInputSchema>;\r\n\r\nconst SpeechToTextOutputSchema = z.object({\r\n  text: z.string().describe('The transcribed text.'),\r\n});\r\nexport type SpeechToTextOutput = z.infer<typeof SpeechToTextOutputSchema>;\r\n\r\nexport async function speechToText(input: SpeechToTextInput): Promise<SpeechToTextOutput> {\r\n  return speechToTextFlow(input);\r\n}\r\n\r\nconst speechToTextFlow = ai.defineFlow(\r\n  {\r\n    name: 'speechToTextFlow',\r\n    inputSchema: SpeechToTextInputSchema,\r\n    outputSchema: SpeechToTextOutputSchema,\r\n  },\r\n  async ({ audioDataUri, language }) => {\r\n    const languagePrompt = language ? ` The user is speaking in ${language}. Transcribe it accurately in that language.` : '';\r\n    \r\n    const { text } = await ai.generate({\r\n      model: 'googleai/gemini-2.0-flash',\r\n      prompt: [{ media: { url: audioDataUri } }, {text: `Transcribe the following audio accurately. The audio contains a description of crop symptoms for agricultural diagnosis.${languagePrompt}`}],\r\n    });\r\n\r\n    return {\r\n      text,\r\n    };\r\n  }\r\n);\r\n"],"names":[],"mappings":";;;;;;IA4BsB,eAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 438, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dhivyaa/AgriVision/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\r\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Select = SelectPrimitive.Root\r\n\r\nconst SelectGroup = SelectPrimitive.Group\r\n\r\nconst SelectValue = SelectPrimitive.Value\r\n\r\nconst SelectTrigger = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <SelectPrimitive.Icon asChild>\r\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\r\n    </SelectPrimitive.Icon>\r\n  </SelectPrimitive.Trigger>\r\n))\r\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\r\n\r\nconst SelectScrollUpButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollUpButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronUp className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollUpButton>\r\n))\r\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\r\n\r\nconst SelectScrollDownButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollDownButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronDown className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollDownButton>\r\n))\r\nSelectScrollDownButton.displayName =\r\n  SelectPrimitive.ScrollDownButton.displayName\r\n\r\nconst SelectContent = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\r\n>(({ className, children, position = \"popper\", ...props }, ref) => (\r\n  <SelectPrimitive.Portal>\r\n    <SelectPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        position === \"popper\" &&\r\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\r\n        className\r\n      )}\r\n      position={position}\r\n      {...props}\r\n    >\r\n      <SelectScrollUpButton />\r\n      <SelectPrimitive.Viewport\r\n        className={cn(\r\n          \"p-1\",\r\n          position === \"popper\" &&\r\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\r\n        )}\r\n      >\r\n        {children}\r\n      </SelectPrimitive.Viewport>\r\n      <SelectScrollDownButton />\r\n    </SelectPrimitive.Content>\r\n  </SelectPrimitive.Portal>\r\n))\r\nSelectContent.displayName = SelectPrimitive.Content.displayName\r\n\r\nconst SelectLabel = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectLabel.displayName = SelectPrimitive.Label.displayName\r\n\r\nconst SelectItem = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <SelectPrimitive.ItemIndicator>\r\n        <Check className=\"h-4 w-4\" />\r\n      </SelectPrimitive.ItemIndicator>\r\n    </span>\r\n\r\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n  </SelectPrimitive.Item>\r\n))\r\nSelectItem.displayName = SelectPrimitive.Item.displayName\r\n\r\nconst SelectSeparator = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\r\n\r\nexport {\r\n  Select,\r\n  SelectGroup,\r\n  SelectValue,\r\n  SelectTrigger,\r\n  SelectContent,\r\n  SelectLabel,\r\n  SelectItem,\r\n  SelectSeparator,\r\n  SelectScrollUpButton,\r\n  SelectScrollDownButton,\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 630, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dhivyaa/AgriVision/src/components/forms/crop-diagnosis-form.tsx"],"sourcesContent":["\r\n'use client';\r\n\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport Image from 'next/image';\r\nimport { useForm } from 'react-hook-form';\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\nimport * as z from 'zod';\r\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Loader2, UploadCloud, Leaf, Bug, FlaskConical, ShieldCheck, Volume2, Mic, MicOff } from 'lucide-react';\r\nimport { diagnoseCrop, type DiagnoseCropOutput } from '@/ai/flows/crop-diagnosis';\r\nimport { textToSpeech } from '@/ai/flows/text-to-speech';\r\nimport { speechToText } from '@/ai/flows/speech-to-text';\r\nimport { cn } from '@/lib/utils';\r\nimport { useLanguage } from '@/hooks/use-language';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { useTranslation } from '@/hooks/use-translation';\r\nimport { translateText } from '@/ai/flows/translate-text';\r\n\r\n \r\nconst formSchema = z.object({\r\n  photo: z.any().refine((file) => file?.[0], 'Please upload an image.'),\r\n  description: z.string().optional(),\r\n});\r\n\r\nconst languages = [\r\n  { value: 'en', label: 'English', code: 'en-US' },\r\n  { value: 'ta', label: 'Tamil', code: 'ta-IN' },\r\n  { value: 'hi', label: 'Hindi', code: 'hi-IN' },\r\n  { value: 'ml', label: 'Malayalam', code: 'ml-IN' },\r\n  { value: 'te', label: 'Telugu', code: 'te-IN' },\r\n  { value: 'kn', label: 'Kannada', code: 'kn-IN' },\r\n];\r\n\r\nconst texts = {\r\n    submitTitle: \"Submit for Diagnosis\",\r\n    submitDescription: \"Upload an image and describe the issue.\",\r\n    cropPhoto: \"Crop Photo\",\r\n    uploadPrompt: \"Click to upload\",\r\n    uploadOrDrag: \"or drag and drop\",\r\n    fileTypes: \"PNG, JPG or JPEG\",\r\n    symptomsLabel: \"Description of Symptoms (Optional)\",\r\n    symptomsPlaceholder: \"e.g., Yellow spots on leaves, wilting stems, etc. You can also use the microphone to record your description.\",\r\n    diagnoseButton: \"Diagnose\",\r\n    resultTitle: \"Diagnosis Result\",\r\n    resultDescription: \"AI-powered analysis and recommendations.\",\r\n    language: \"Language\",\r\n    listenButton: \"Listen to diagnosis\",\r\n    disease: \"Identified Disease\",\r\n    causes: \"Possible Causes\",\r\n    remedies: \"Recommended Remedies\",\r\n    prevention: \"Preventive Measures\",\r\n    resultsPlaceholder: \"Your diagnosis results will appear here.\",\r\n    quotaError: \"You have exceeded your API quota. Please try again later or check your billing plan.\",\r\n};\r\n\r\nexport function CropDiagnosisForm() {\r\n  const [result, setResult] = useState<DiagnoseCropOutput | null>(null);\r\n  const [translatedResult, setTranslatedResult] = useState<DiagnoseCropOutput | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [translationLoading, setTranslationLoading] = useState(false);\r\n  const [preview, setPreview] = useState<string | null>(null);\r\n  const [audioDataUri, setAudioDataUri] = useState<string | null>(null);\r\n  const [audioLoading, setAudioLoading] = useState(false);\r\n\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [recordingLoading, setRecordingLoading] = useState(false);\r\n  const mediaRecorderRef = useRef<MediaRecorder | null>(null);\r\n  const audioChunksRef = useRef<Blob[]>([]);\r\n  \r\n  const { language } = useLanguage();\r\n  const [ttsLanguage, setTtsLanguage] = useState(language);\r\n  const { t } = useTranslation(texts);\r\n\r\n\r\n  useEffect(() => {\r\n    setTtsLanguage(language);\r\n  }, [language]);\r\n\r\n  useEffect(() => {\r\n    if (result && ttsLanguage) {\r\n      translateResults(ttsLanguage);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [ttsLanguage, result]);\r\n\r\n\r\n  const form = useForm<z.infer<typeof formSchema>>({\r\n    resolver: zodResolver(formSchema),\r\n    defaultValues: {\r\n      description: '',\r\n    },\r\n  });\r\n\r\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setPreview(reader.result as string);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (values: z.infer<typeof formSchema>) => {\r\n    setLoading(true);\r\n    setResult(null);\r\n    setTranslatedResult(null);\r\n    setError(null);\r\n    setAudioDataUri(null);\r\n\r\n    try {\r\n      const file = values.photo[0];\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = async () => {\r\n        try {\r\n            const photoDataUri = reader.result as string;\r\n            const response = await diagnoseCrop({\r\n              photoDataUri,\r\n              description: values.description,\r\n            });\r\n            setResult(response);\r\n            setTranslatedResult(response);\r\n        } catch(e: any) {\r\n            if (e.message?.includes('429')) {\r\n                setError(t('quotaError'));\r\n            } else {\r\n                setError('An error occurred during diagnosis.');\r\n            }\r\n            console.error(e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n      };\r\n      reader.onerror = (error) => {\r\n        console.error('Error reading file:', error);\r\n        setError('Failed to read the image file.');\r\n        setLoading(false);\r\n      };\r\n    } catch (e) {\r\n      console.error(e);\r\n      setError('An error occurred during diagnosis.');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const translateResults = async (targetLanguage: string) => {\r\n    if (!result) return;\r\n\r\n    if (targetLanguage === 'en') {\r\n        setTranslatedResult(result);\r\n        return;\r\n    }\r\n\r\n    setTranslationLoading(true);\r\n    try {\r\n        const textsToTranslate = [\r\n            result.diseaseName,\r\n            result.possibleCauses,\r\n            result.recommendedRemedies,\r\n            result.preventiveMeasures,\r\n        ];\r\n        const combinedText = textsToTranslate.join('\\n---\\n');\r\n        const translationResponse = await translateText({ text: combinedText, targetLanguage });\r\n        const translatedParts = translationResponse.translatedText.split('\\n---\\n');\r\n\r\n        setTranslatedResult({\r\n            diseaseName: translatedParts[0] || result.diseaseName,\r\n            possibleCauses: translatedParts[1] || result.possibleCauses,\r\n            recommendedRemedies: translatedParts[2] || result.recommendedRemedies,\r\n            preventiveMeasures: translatedParts[3] || result.preventiveMeasures,\r\n        });\r\n\r\n    } catch (e: any) {\r\n        console.error(e);\r\n        if (e.message?.includes('429')) {\r\n            setError(t('quotaError'));\r\n        } else {\r\n            setError('An error occurred during translation.');\r\n        }\r\n        setTranslatedResult(result); // Fallback to original\r\n    } finally {\r\n        setTranslationLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleListen = async () => {\r\n    if (!translatedResult) return;\r\n    setAudioLoading(true);\r\n    setAudioDataUri(null);\r\n    setError(null);\r\n    try {\r\n      const textToRead = `\r\n        Disease: ${translatedResult.diseaseName}.\r\n        Possible Causes: ${translatedResult.possibleCauses}.\r\n        Recommended Remedies: ${translatedResult.recommendedRemedies}.\r\n        Preventive Measures: ${translatedResult.preventiveMeasures}.\r\n      `;\r\n      const response = await textToSpeech({ text: textToRead, language: ttsLanguage });\r\n      setAudioDataUri(response.audioDataUri);\r\n    } catch (e: any) {\r\n      console.error(e);\r\n      if (e.message?.includes('429')) {\r\n          setError(t('quotaError'));\r\n      } else {\r\n          setError('An error occurred during audio generation.');\r\n      }\r\n    } finally {\r\n      setAudioLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRecording = async () => {\r\n    if (isRecording) {\r\n      mediaRecorderRef.current?.stop();\r\n      setIsRecording(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setError(null);\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      mediaRecorderRef.current = new MediaRecorder(stream);\r\n      mediaRecorderRef.current.ondataavailable = (event) => {\r\n        audioChunksRef.current.push(event.data);\r\n      };\r\n      mediaRecorderRef.current.onstop = async () => {\r\n        setRecordingLoading(true);\r\n        const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/wav' });\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(audioBlob);\r\n        reader.onloadend = async () => {\r\n          const audioDataUri = reader.result as string;\r\n          try {\r\n            const currentLangCode = languages.find(l => l.value === language)?.code || 'en-US';\r\n            const { text } = await speechToText({ audioDataUri, language: currentLangCode });\r\n            form.setValue('description', text);\r\n          } catch (e) {\r\n            console.error(e);\r\n            setError('Failed to transcribe audio. Please try again.');\r\n          } finally {\r\n            setRecordingLoading(false);\r\n          }\r\n        };\r\n        audioChunksRef.current = [];\r\n        stream.getTracks().forEach(track => track.stop());\r\n      };\r\n      audioChunksRef.current = [];\r\n      mediaRecorderRef.current.start();\r\n      setIsRecording(true);\r\n    } catch (err) {\r\n      console.error(\"Error accessing microphone:\", err);\r\n      setError(\"Could not access microphone. Please ensure you have given permission.\");\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"font-headline\">{t('submitTitle')}</CardTitle>\r\n          <CardDescription>{t('submitDescription')}</CardDescription>\r\n        </CardHeader>\r\n        <Form {...form}>\r\n          <form onSubmit={form.handleSubmit(onSubmit)}>\r\n            <CardContent className=\"space-y-4\">\r\n              <FormField\r\n                control={form.control}\r\n                name=\"photo\"\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel>{t('cropPhoto')}</FormLabel>\r\n                    <FormControl>\r\n                      <div className=\"flex items-center justify-center w-full\">\r\n                        <label htmlFor=\"dropzone-file\" className=\"flex flex-col items-center justify-center w-full h-64 border-2 border-dashed rounded-lg cursor-pointer bg-card hover:bg-muted/50\">\r\n                          {preview ? (\r\n                            <Image src={preview} alt=\"Preview\" width={256} height={256} className=\"object-contain h-full w-full rounded-lg\" />\r\n                          ) : (\r\n                            <div className=\"flex flex-col items-center justify-center pt-5 pb-6\">\r\n                              <UploadCloud className=\"w-8 h-8 mb-4 text-muted-foreground\" />\r\n                              <p className=\"mb-2 text-sm text-muted-foreground\"><span className=\"font-semibold\">{t('uploadPrompt')}</span> {t('uploadOrDrag')}</p>\r\n                              <p className=\"text-xs text-muted-foreground\">{t('fileTypes')}</p>\r\n                            </div>\r\n                          )}\r\n                          <Input id=\"dropzone-file\" type=\"file\" className=\"hidden\" accept=\"image/png, image/jpeg, image/jpg\"\r\n                            onChange={(e) => {\r\n                              field.onChange(e.target.files);\r\n                              handleFileChange(e);\r\n                            }}\r\n                          />\r\n                        </label>\r\n                      </div>\r\n                    </FormControl>\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n              <FormField\r\n                control={form.control}\r\n                name=\"description\"\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel>{t('symptomsLabel')}</FormLabel>\r\n                    <FormControl>\r\n                      <div className=\"relative\">\r\n                        <Textarea placeholder={t('symptomsPlaceholder')} {...field} />\r\n                        <Button\r\n                          type=\"button\"\r\n                          size=\"icon\"\r\n                          variant=\"ghost\"\r\n                          onClick={handleRecording}\r\n                          disabled={recordingLoading}\r\n                          className={cn(\r\n                            \"absolute bottom-2 right-2\",\r\n                            isRecording && \"text-red-500 hover:text-red-600\"\r\n                          )}\r\n                          title={isRecording ? \"Stop recording\" : \"Start recording\"}\r\n                        >\r\n                          {recordingLoading ? <Loader2 className=\"h-4 w-4 animate-spin\" /> : (isRecording ? <MicOff /> : <Mic />)}\r\n                          <span className=\"sr-only\">{isRecording ? \"Stop recording\" : \"Start recording\"}</span>\r\n                        </Button>\r\n                      </div>\r\n                    </FormControl>\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n            </CardContent>\r\n            <CardFooter>\r\n              <Button type=\"submit\" disabled={loading} className=\"w-full\">\r\n                {loading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\r\n                {t('diagnoseButton')}\r\n              </Button>\r\n            </CardFooter>\r\n          </form>\r\n        </Form>\r\n      </Card>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <div className=\"flex flex-row items-start justify-between\">\r\n            <div>\r\n              <CardTitle className=\"font-headline\">{t('resultTitle')}</CardTitle>\r\n              <CardDescription>{t('resultDescription')}</CardDescription>\r\n            </div>\r\n             {result && (\r\n              <div className=\"flex items-center gap-2\">\r\n                <Select value={ttsLanguage} onValueChange={setTtsLanguage}>\r\n                  <SelectTrigger className=\"w-[120px]\">\r\n                    <SelectValue placeholder={t('language')} />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    {languages.map((lang) => (\r\n                      <SelectItem key={lang.value} value={lang.value}>\r\n                        {lang.label}\r\n                      </SelectItem>\r\n                    ))}\r\n                  </SelectContent>\r\n                </Select>\r\n                <Button variant=\"outline\" size=\"icon\" onClick={handleListen} disabled={audioLoading || translationLoading} title={t('listenButton')}>\r\n                  {audioLoading ? <Loader2 className=\"h-4 w-4 animate-spin\" /> : <Volume2 className=\"h-4 w-4\" />}\r\n                  <span className=\"sr-only\">{t('listenButton')}</span>\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </CardHeader>\r\n        <CardContent>\r\n          {(loading || translationLoading) && (\r\n            <div className=\"flex justify-center items-center h-full\">\r\n              <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\r\n            </div>\r\n          )}\r\n          {error && <p className=\"text-destructive\">{error}</p>}\r\n          \r\n          {audioDataUri && (\r\n            <div className=\"mb-4\">\r\n               <audio controls autoPlay className=\"w-full\">\r\n                <source src={audioDataUri} type=\"audio/wav\" />\r\n                Your browser does not support the audio element.\r\n              </audio>\r\n            </div>\r\n          )}\r\n\r\n          {translatedResult && !loading && !translationLoading && (\r\n            <div className=\"space-y-6\">\r\n              <div className=\"flex items-center gap-4\">\r\n                <div className=\"p-3 bg-primary/10 rounded-full\">\r\n                  <Leaf className=\"h-6 w-6 text-primary\" />\r\n                </div>\r\n                <div>\r\n                  <h3 className=\"text-lg font-semibold\">{translatedResult.diseaseName}</h3>\r\n                  <p className=\"text-sm text-muted-foreground\">{t('disease')}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex gap-4\">\r\n                  <Bug className=\"h-5 w-5 mt-1 text-accent flex-shrink-0\" />\r\n                  <div>\r\n                    <h4 className=\"font-semibold\">{t('causes')}</h4>\r\n                    <p className=\"text-muted-foreground\">{translatedResult.possibleCauses}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex gap-4\">\r\n                  <FlaskConical className=\"h-5 w-5 mt-1 text-accent flex-shrink-0\" />\r\n                  <div>\r\n                    <h4 className=\"font-semibold\">{t('remedies')}</h4>\r\n                    <p className=\"text-muted-foreground\">{translatedResult.recommendedRemedies}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex gap-4\">\r\n                  <ShieldCheck className=\"h-5 w-5 mt-1 text-accent flex-shrink-0\" />\r\n                  <div>\r\n                    <h4 className=\"font-semibold\">{t('prevention')}</h4>\r\n                    <p className=\"text-muted-foreground\">{translatedResult.preventiveMeasures}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {!loading && !result && !error && (\r\n            <div className=\"text-center text-muted-foreground py-10\">\r\n              {t('resultsPlaceholder')}\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\n    \r\n\r\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1622, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dhivyaa/AgriVision/src/app/crop-diagnosis/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport React from \"react\"\r\nimport { PageHeader } from \"@/components/page-header\"\r\nimport { CropDiagnosisForm } from \"@/components/forms/crop-diagnosis-form\"\r\nimport { useTranslation } from \"@/hooks/use-translation\"\r\n\r\nconst texts = {\r\n  title: \"Crop Diagnosis\",\r\n  description: \"Upload a photo or provide crop details to diagnose issues.\",\r\n}\r\n\r\nexport default function CropDiagnosisPage() {\r\n  const { t } = useTranslation(texts)\r\n\r\n  return (\r\n    <div className=\"space-y-6 p-6\">\r\n      <PageHeader\r\n        title={t(\"title\")}\r\n        description={t(\"description\")}\r\n      />\r\n      <CropDiagnosisForm />\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AALA;;;;;AAOA,MAAM,QAAQ;IACZ,OAAO;IACP,aAAa;AACf;AAEe,SAAS;IACtB,MAAM,EAAE,CAAC,EAAE,GAAG,CAAA,GAAA,mIAAA,CAAA,iBAAc,AAAD,EAAE;IAE7B,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,oIAAA,CAAA,aAAU;gBACT,OAAO,EAAE;gBACT,aAAa,EAAE;;;;;;0BAEjB,8OAAC,wJAAA,CAAA,oBAAiB;;;;;;;;;;;AAGxB","debugId":null}}]
}