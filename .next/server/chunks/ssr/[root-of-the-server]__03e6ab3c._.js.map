{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dhivyaa/AgriVision/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\r\nimport {googleAI} from '@genkit-ai/googleai';\r\n\r\nexport const ai = genkit({\r\n  plugins: [googleAI()],\r\n  model: 'googleai/gemini-2.0-flash',\r\n});\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;;;;;;AAEO,MAAM,KAAK,CAAA,GAAA,4GAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,oJAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dhivyaa/AgriVision/src/ai/flows/translate-text.ts"],"sourcesContent":["\r\n'use server';\r\n\r\n/**\r\n * @fileOverview A text translation flow using Genkit and Google AI.\r\n * \r\n * - translateText - Translates text to a specified target language.\r\n * - TranslateTextInput - The input type for the translateText function.\r\n * - TranslateTextOutput - The return type for the translateText function.\r\n */\r\n\r\nimport {ai} from '@/ai/genkit';\r\nimport {z} from 'genkit';\r\n\r\nconst TranslateTextInputSchema = z.object({\r\n  text: z.string().describe('The text to be translated. This may contain multiple lines separated by \"\\\\n---\\\\n\".'),\r\n  targetLanguage: z.string().describe('The target language for translation (e.g., \"hi\", \"ta\").'),\r\n});\r\nexport type TranslateTextInput = z.infer<typeof TranslateTextInputSchema>;\r\n\r\nconst TranslateTextOutputSchema = z.object({\r\n  translatedText: z.string().describe('The translated text, preserving the \"\\\\n---\\\\n\" separators.'),\r\n});\r\nexport type TranslateTextOutput = z.infer<typeof TranslateTextOutputSchema>;\r\n\r\nexport async function translateText(input: TranslateTextInput): Promise<TranslateTextOutput> {\r\n  return translateTextFlow(input);\r\n}\r\n\r\nconst translateTextFlow = ai.defineFlow(\r\n  {\r\n    name: 'translateTextFlow',\r\n    inputSchema: TranslateTextInputSchema,\r\n    outputSchema: TranslateTextOutputSchema,\r\n  },\r\n  async ({ text, targetLanguage }) => {\r\n    // Handle cases where the text might be empty or just separators\r\n    if (!text.trim() || text.trim() === '---') {\r\n      return { translatedText: text };\r\n    }\r\n\r\n    const { text: translatedText } = await ai.generate({\r\n      model: 'googleai/gemini-2.0-flash',\r\n      prompt: `Translate the following text to the language with code '${targetLanguage}'. The text may contain multiple distinct entries separated by \"\\\\n---\\\\n\". Maintain this separator in your output. Return only the translated text, preserving the separators exactly as they appear in the input.\\n\\nText to translate: \"${text}\"`,\r\n    });\r\n    \r\n    return {\r\n      translatedText,\r\n    };\r\n  }\r\n);\r\n"],"names":[],"mappings":";;;;;AAGA;;;;;;CAMC,GAED;AACA;;;;;;;;;;;AAEA,MAAM,2BAA2B,4GAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,MAAM,4GAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC1B,gBAAgB,4GAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACtC;AAGA,MAAM,4BAA4B,4GAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACzC,gBAAgB,4GAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACtC;AAGO,eAAe,cAAc,KAAyB;IAC3D,OAAO,kBAAkB;AAC3B;AAEA,MAAM,oBAAoB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACrC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAO,EAAE,IAAI,EAAE,cAAc,EAAE;IAC7B,gEAAgE;IAChE,IAAI,CAAC,KAAK,IAAI,MAAM,KAAK,IAAI,OAAO,OAAO;QACzC,OAAO;YAAE,gBAAgB;QAAK;IAChC;IAEA,MAAM,EAAE,MAAM,cAAc,EAAE,GAAG,MAAM,mHAAA,CAAA,KAAE,CAAC,QAAQ,CAAC;QACjD,OAAO;QACP,QAAQ,CAAC,wDAAwD,EAAE,eAAe,2OAA2O,EAAE,KAAK,CAAC,CAAC;IACxU;IAEA,OAAO;QACL;IACF;AACF;;;IAxBoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dhivyaa/AgriVision/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {translateText as '402578704a0068c0448430b72144adf3acc23f7769'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dhivyaa/AgriVision/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoR,GACjT,kDACA","debugId":null}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dhivyaa/AgriVision/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,8BACA","debugId":null}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}